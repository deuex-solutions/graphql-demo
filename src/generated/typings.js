/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */






declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  InputFilter: { // input type
    filter?: any | null; // JSON
  }
  InputInterval: { // input type
    interval?: any | null; // JSON
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Query: {};
  Stats: { // root type
    averageRevenuePerCustomer?: number | null; // Int
    averageRevenuePerDay?: number | null; // Int
    averageRevenuePerOrder?: number | null; // Int
    customerCount?: number | null; // Int
    filters?: any | null; // JSON
    grossAmount?: number | null; // Int
    grouping?: string | null; // String
    interval?: any | null; // JSON
    netAmount?: number | null; // Int
    orderCount?: number | null; // Int
    recurringGrossAmount?: number | null; // Int
    recurringNetAmount?: number | null; // Int
    recurringOrderCount?: number | null; // Int
    refundAmount?: number | null; // Int
    refundCount?: number | null; // Int
  }
  Summary: { // root type
    filters?: any | null; // JSON
    groupBy?: string | null; // String
    interval?: any | null; // JSON
    limit?: number | null; // Int
    sortBy?: string | null; // String
    stats?: NexusGenRootTypes['Stats'] | null; // Stats
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  JSON: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  InputFilter: NexusGenInputs['InputFilter'];
  InputInterval: NexusGenInputs['InputInterval'];
}

export interface NexusGenFieldTypes {
  Query: { // field return type
    stats: NexusGenRootTypes['Stats'] | null; // Stats
    summary: NexusGenRootTypes['Summary'] | null; // Summary
  }
  Stats: { // field return type
    averageRevenuePerCustomer: number | null; // Int
    averageRevenuePerDay: number | null; // Int
    averageRevenuePerOrder: number | null; // Int
    customerCount: number | null; // Int
    filters: any | null; // JSON
    grossAmount: number | null; // Int
    grouping: string | null; // String
    interval: any | null; // JSON
    netAmount: number | null; // Int
    orderCount: number | null; // Int
    recurringGrossAmount: number | null; // Int
    recurringNetAmount: number | null; // Int
    recurringOrderCount: number | null; // Int
    refundAmount: number | null; // Int
    refundCount: number | null; // Int
  }
  Summary: { // field return type
    filters: any | null; // JSON
    groupBy: string | null; // String
    interval: any | null; // JSON
    limit: number | null; // Int
    sortBy: string | null; // String
    stats: NexusGenRootTypes['Stats'] | null; // Stats
  }
}

export interface NexusGenArgTypes {
  Query: {
    stats: { // args
      filters?: NexusGenInputs['InputFilter'] | null; // InputFilter
      interval?: NexusGenInputs['InputInterval'] | null; // InputInterval
    }
    summary: { // args
      filters?: NexusGenInputs['InputFilter'] | null; // InputFilter
      groupBy?: string | null; // String
      interval?: NexusGenInputs['InputInterval'] | null; // InputInterval
      limit?: number | null; // Int
      sortBy?: string | null; // String
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Query" | "Stats" | "Summary";

export type NexusGenInputNames = "InputFilter" | "InputInterval";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "JSON" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}